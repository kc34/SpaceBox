// Generated by CoffeeScript 1.9.3
var Vector;

Vector = (function() {
  function Vector(vector) {
    this.x = vector.x;
    this.y = vector.y;
  }

  Vector.fromComponents = function(x, y) {
    return new Vector({
      x: x,
      y: y
    });
  };

  Vector.fromPolar = function(r, theta) {
    return new Vector({
      x: r * Math.cos(theta),
      y: r * Math.sin(theta)
    });
  };

  Vector.prototype.add = function(v) {
    return new Vector({
      x: this.x + v.x,
      y: this.y + v.y
    });
  };

  Vector.prototype.subtract = function(v) {
    return new Vector({
      x: this.x - v.x,
      y: this.y - v.y
    });
  };

  Vector.prototype.scMult = function(s) {
    return new Vector({
      x: s * this.x,
      y: s * this.y
    });
  };

  Vector.prototype.norm = function() {
    return Math.pow(Math.pow(this.x, 2) + Math.pow(this.y, 2), 0.5);
  };

  Vector.prototype.unit = function() {
    if (this.norm() === 0) {
      return Vector2D.ZERO;
    } else {
      return this.mul(1 / this.norm());
    }
  };

  Vector.prototype.transform = function(tMatrix) {
    return new Vector({
      x: this.x * tMatrix[0][0] + this.y * tMatrix[0][1],
      y: this.x * tMatrix[1][0] + this.y * tMatrix[1][1]
    });
  };

  Vector.prototype.getAngle = function() {
    return Math.atan2(this.y, this.x);
  };

  Vector.distance = function(v1, v2) {
    return v1.subtract(v2).norm();
  };

  return Vector;

})();

Vector.ZERO = Vector.fromComponents(0, 0);

Vector.NULL = Vector.fromComponents(null, null);
